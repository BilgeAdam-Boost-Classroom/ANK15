// <auto-generated />
using System;
using ANK15Okul.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ANK15Okul.Migrations
{
    [DbContext(typeof(Ank15OkulDbContext))]
    [Migration("20240110081229_mig5")]
    partial class mig5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ANK15Okul.Concrete.Calisan", b =>
                {
                    b.Property<int>("CalisanPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanPrimaryKey"), 1L, 1);

                    b.Property<string>("sicilNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CalisanPrimaryKey");

                    b.HasIndex("sicilNo")
                        .IsUnique();

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Danisman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Danismanlar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kredi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Diploma", b =>
                {
                    b.Property<int>("DiplomaBirincilAnahtar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiplomaBirincilAnahtar"), 1L, 1);

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("DiplomaBirincilAnahtar");

                    b.HasIndex("No")
                        .IsUnique();

                    b.ToTable("Diplomalar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Laboratuvar", b =>
                {
                    b.Property<int>("L1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("L2");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("L1"), 1L, 1);

                    b.HasKey("L1");

                    b.ToTable("Laboratuvarlar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Ogrenci", b =>
                {
                    b.Property<int>("OgrenciBirincilAnahtar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OgrenciTekilNo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgrenciBirincilAnahtar"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OgrenciAd");

                    b.Property<int?>("DanismanId")
                        .HasColumnType("int")
                        .HasColumnName("DanismanYabanciAnahtar");

                    b.Property<int?>("DiplomaYabanciAnahtar")
                        .HasColumnType("int");

                    b.Property<int>("KarneId")
                        .HasColumnType("int");

                    b.Property<string>("Numara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubeYabancıAnahtar")
                        .HasColumnType("int");

                    b.HasKey("OgrenciBirincilAnahtar");

                    b.HasIndex("DanismanId");

                    b.HasIndex("DiplomaYabanciAnahtar")
                        .IsUnique()
                        .HasFilter("[DiplomaYabanciAnahtar] IS NOT NULL");

                    b.HasIndex("KarneId")
                        .IsUnique();

                    b.HasIndex("SubeYabancıAnahtar");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.OgrenciDers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("Not")
                        .HasColumnType("int");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrenciDersler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Sube", b =>
                {
                    b.Property<int>("SubeBirincilAnahtar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubeBirincilAnahtar"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubeBirincilAnahtar");

                    b.HasIndex("Ad")
                        .IsUnique();

                    b.ToTable("Sections", (string)null);
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Transcript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Transcriptler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.YazarKitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<int>("Book")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Book");

                    b.ToTable("YazarKitap");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Ogrenci", b =>
                {
                    b.HasOne("ANK15Okul.Concrete.Danisman", "Danisman")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("DanismanId");

                    b.HasOne("ANK15Okul.Concrete.Diploma", "Diploma")
                        .WithOne("Ogrenci")
                        .HasForeignKey("ANK15Okul.Concrete.Ogrenci", "DiplomaYabanciAnahtar");

                    b.HasOne("ANK15Okul.Concrete.Transcript", "Transcript")
                        .WithOne("Ogrenci")
                        .HasForeignKey("ANK15Okul.Concrete.Ogrenci", "KarneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANK15Okul.Concrete.Sube", "Sube")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("SubeYabancıAnahtar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danisman");

                    b.Navigation("Diploma");

                    b.Navigation("Sube");

                    b.Navigation("Transcript");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.OgrenciDers", b =>
                {
                    b.HasOne("ANK15Okul.Concrete.Ders", "Ders")
                        .WithMany("OgrenciDersler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANK15Okul.Concrete.Ogrenci", "Ogrenci")
                        .WithMany("OgrenciDersler")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.YazarKitap", b =>
                {
                    b.HasOne("ANK15Okul.Concrete.Yazar", "Yazar")
                        .WithMany("YazarKitaplar")
                        .HasForeignKey("Author")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANK15Okul.Concrete.Kitap", "Kitap")
                        .WithMany("KitapYazarlar")
                        .HasForeignKey("Book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Danisman", b =>
                {
                    b.Navigation("Ogrenciler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Ders", b =>
                {
                    b.Navigation("OgrenciDersler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Diploma", b =>
                {
                    b.Navigation("Ogrenci")
                        .IsRequired();
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Kitap", b =>
                {
                    b.Navigation("KitapYazarlar");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Ogrenci", b =>
                {
                    b.Navigation("OgrenciDersler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Sube", b =>
                {
                    b.Navigation("Ogrenciler");
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Transcript", b =>
                {
                    b.Navigation("Ogrenci")
                        .IsRequired();
                });

            modelBuilder.Entity("ANK15Okul.Concrete.Yazar", b =>
                {
                    b.Navigation("YazarKitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
