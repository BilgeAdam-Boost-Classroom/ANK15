// <auto-generated />
using AnkKutuphane.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnkKutuphane.DAL.Migrations
{
    [DbContext(typeof(KutuphaneDbContext))]
    [Migration("20240112073934_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.Bandrol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bandrols");
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.Kutuphane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kutuphanes");
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.YayinEvi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("YayinEvis");
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasimYeri")
                        .HasColumnType("int");

                    b.Property<int>("Etiket")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasimYeri");

                    b.HasIndex("Etiket")
                        .IsUnique();

                    b.ToTable("Kitaps");
                });

            modelBuilder.Entity("Kutuphanekitap", b =>
                {
                    b.Property<int>("KutuphanesId")
                        .HasColumnType("int");

                    b.Property<int>("kitapsId")
                        .HasColumnType("int");

                    b.HasKey("KutuphanesId", "kitapsId");

                    b.HasIndex("kitapsId");

                    b.ToTable("Kutuphanekitap");
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.kitap", b =>
                {
                    b.HasOne("AnkKutuphane.DAL.Concrete.YayinEvi", "YayinEvi")
                        .WithMany("kitaps")
                        .HasForeignKey("BasimYeri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnkKutuphane.DAL.Concrete.Bandrol", "Bandrol")
                        .WithOne("kitap")
                        .HasForeignKey("AnkKutuphane.DAL.Concrete.kitap", "Etiket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bandrol");

                    b.Navigation("YayinEvi");
                });

            modelBuilder.Entity("Kutuphanekitap", b =>
                {
                    b.HasOne("AnkKutuphane.DAL.Concrete.Kutuphane", null)
                        .WithMany()
                        .HasForeignKey("KutuphanesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnkKutuphane.DAL.Concrete.kitap", null)
                        .WithMany()
                        .HasForeignKey("kitapsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.Bandrol", b =>
                {
                    b.Navigation("kitap")
                        .IsRequired();
                });

            modelBuilder.Entity("AnkKutuphane.DAL.Concrete.YayinEvi", b =>
                {
                    b.Navigation("kitaps");
                });
#pragma warning restore 612, 618
        }
    }
}
